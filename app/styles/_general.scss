/**
***********************
  GENERAL STYLES
***********************
**/

body {
    z-index: -1;
    background: transparent;
}

html {
    background-color: $colorBg;
}

body, html {
  font-family: $familyStandard;
  padding: 0px;
  margin: 0px;
  min-height:100%;
}

.localCity {

    background-image: url('../images/backgrounds/local-street-bg-2.png');
    opacity: .90;
    background-repeat: no-repeat;
    top: 0;
    right: 0;
    left: 0;
    z-index: -3;
    //Essentially, 100% of the viewport, plus the disappearing iPhone navbar
    height: calc(100% + 88px);
    width: 100%;
    position: fixed !important;
    background-size: contain;
    //Background position covered in JS
//Going to have a general guess of the background on page load,
//and then move it into position once page is fully loaded
background-position: 100% 200px;

//Background transition downward from the top
@include transition(background-position 750ms ease 250ms);


}

.bgFade {
    @include transition(background 750ms ease 250ms);
    background-image: url('../images/backgrounds/local-street-bg-blur7.png');
}

.darkBlurBodyBg {

    animation-name: color_change;
	animation-duration: 0.5s;
	animation-iteration-count: 1;
	animation-direction: alternate;

    background-color: $standardAlphaDark;
    height: 10000px;
    width: 100%;
    z-index: -2;
}

@include keyframes(color_change) {
    from { background-color: $standardAlphaLight; }	to { background-color: $standardAlphaDark; }
}

@include keyframes(fadein) {
    from { opacity: 0; }
    to   { opacity: 1; }
}

.container{
    position:relative !important;
    @include animation('fadein 3s');
}

.container, .fn-app {
    height: 100% !important;
    padding: 0px !important;
}

/**
***********************
  LOADING SPINNER
***********************
**/

@include keyframes(color_change_loading) {
    from { background-color: $transparent; }	to { background-color: $standardAlphaLight; }
}

@include keyframes(rotation) {
    from {@include transform(rotate(0deg));}
    to {@include transform(rotate(359deg));}
}

.loadDarkBody {
    @extend .darkBlurBodyBg;

    z-index: 100;
    background-color: $standardAlphaLight;
    position: absolute;
    animation-name: color_change_loading;
    animation-duration: 0.25s;

    //Move it to fit the screen
    width: 100%;
    height: 1000px;
    left: 0;
    top: 0;
    pointer-events: none;

    .loadContainer {


        position: fixed;
        top: calc(33%);
        left: calc(50% - 45%);
        z-index: 101;
        background-color: $standard;
        border-radius: 5px;
        padding: 10px;
        margin: 0px;
        width: 90%;
        color: $inverseStandard;

        .spinner {
           height:60px;
           width:60px;
           margin:0px auto;
           @include animation(rotation .6s infinite linear);
           border-left:6px solid $spinnerLight;
           border-right:6px solid $spinnerLight;
           border-bottom:6px solid $spinnerLight;
           border-top:6px solid $spinnerDark;
           border-radius:100%;
           z-index: 2;
        }

        .handlerContainer {
            padding: 10px;
            width: 100%;
            height: auto;
            text-align: center;
            z-index: 2;

            margin-top: 5px;
            margin-bottom: 5px;
        }

        h3 {
            margin-top: 0px;
            margin-bottom: 0px;
        }
    }
}

*:focus {
  outline: 0; /* remove border around focused elements, especially on Google Chrome */
}

.roundWhiteBorder {
  border: 2px solid $inverseStandard;
  border-radius: 7px;
}

textarea {
    border: 0;
    background-color: transparent;
    background-image: none; /* remove inset gradient on Firefox mobile */
    @include boxSizing(border-box);
    width: 100%;
}

input {
    @extend textarea;

    @include darkPlaceholder;

    &:focus {
        @include lightPlaceholder;
    }
}

.localightImg {
    @extend .center;

    padding-left: 10px;
    padding-right: 10px;
    vertical-align: top;
}


.sub-header{
    width: 100%;
    font-size: 2em;
}

.darkerCity {
    background-image: url("../images/backgrounds/auth-bg.png");
    background-repeat:no-repeat;
    background-size: 100% 100%;
}

.center {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
    display: block;
}

.upside {
    @include transform(rotate(180deg));
}

.textRightAlign {
    text-align: right;
}

.whiteText{
    color: $inverseStandard;
}

.blackText{
    color: $standard;
}

.linkText {
    color: $darkOverlay;
}

.placeHolderTextStyle {
    color: $placeHolder;
}

.navText {
    font-size: .75em;
}

.navCell {
    @extend .navText;

    width: 33%;
    color: $standard;

    a {
        color: $standard !important;
        text-decoration: none;
    }
}

.navBowTie {
    text-align: left;
    width: 25px;
    height: 15px;
}

.navArrow {
    color: black;
    font-size: 25px;
    vertical-align: middle;
}

.arrowContainer {

    height: 30px;
    width: 20px;
    display: inline-block;
    padding-top: 6px;
}

.authArrowContainer {
    height: 50px;
    width: 35px;
    display: inline-block;
}

//Simply for up and down arrows
.authArrowContainerWide {
    height: 40px;
    width: 100px;
}

.noHover {

    &:hover {
        background-color: $standardAlphaLight !important;
    }

    &:active {
        background-color: $standardAlphaLight !important;
    }

    &:focus {
        background-color: $standardAlphaLight !important;
    }
}

/* DialPad Buttons */

//Variable for the scaling of our dialpad
$dialScale: 0.85;
.dialPad {
    border-collapse: separate;
    border-spacing: 0px;
}

@media (max-width: 340px) {
    .dialPad {
        border-spacing: 0px !important;
    }
}

.dialButton {
    transition: none;
    background-repeat: no-repeat;
    background-size: contain;
    height: 100px;
    width: 100px;

    //Make the dialpad smaller
    margin-left: -4px;
    margin-right: -4px;
    margin-top: -8px;
    @include transform(scale($dialScale, $dialScale));
}

.buttonDel {
    background-image: url("../images/variousIcons/auth-delete-btn-aqua.png");
    background-repeat: no-repeat;
    background-size: contain;
    height: 55px;
    width: 75px;
    @include transform(scale($dialScale, $dialScale));
}

.triconButton {
    transition: none;
    background-repeat: no-repeat;
    background-size: contain;
    height: 100px;
    width: 100px;
}

/* End Dialad Buttons */

/**
***********************
  END GENERAL STYLES
***********************
**/
